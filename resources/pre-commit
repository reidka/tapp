#!/bin/sh

STAGED_JS_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep ".jsx\{0,1\}$")
STAGED_RUBY_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep ".rb")

if [ "$STAGED_JS_FILES" = "" -a "$STAGED_RUBY_FILES" = "" ]; then
  exit 0
fi

if [[ ! "$STAGED_JS_FILES" = "" ]]; then
    PASS=true

    printf "\nValidating Javascript:\n"

    ESLINT="$(git rev-parse --show-toplevel)/frontend/node_modules/eslint/bin/eslint.js"

    # Check for eslint
    if [[ ! -x "$ESLINT" ]]; then
        printf "\nPlease make sure that node_modules is built locally so that eslint can be executed.\n"
        exit 1
    fi

    for FILE in $STAGED_JS_FILES
        do
            "$ESLINT" "$FILE"

            if [[ "$?" == 0 ]]; then
                printf "\t\033[32mESLint Passed: $FILE\033[0m"
            else
                printf "\t\033[41mESLint Failed: $FILE\033[0m"
                PASS=false
        fi
    done

    printf "\nJavascript validation completed!\n"

    if ! $PASS; then
        printf "\033[41mCOMMIT FAILED:\033[0m Your commit contains files that should pass ESLint but do not. Please fix the ESLint errors and try again.\n"
        exit 1
    else
        printf "\033[42mJavascript validation succeeded!\033[0m\n"
    fi
fi

if [[ ! "$STAGED_RUBY_FILES" = "" ]]; then
    printf "\nValidating Ruby:\n"

    RUBOCOP="$(git rev-parse --show-toplevel)/api/resources/rubocop.rb"

    ruby $RUBOCOP --index -Ra --fail-level convention
    RUBOCOP_EXIT=$?

    if [[ "$RUBOCOP_EXIT" == 1 ]]; then
        printf "\033[41mCOMMIT FAILED:\033[0m Your commit contains files that should pass Rubocop but do not. Please fix the Rubocop errors and try again.\n"
        exit $RUBOCOP_EXIT
    fi

    printf "\nJavascript validation completed!\n"
    printf "\033[42mRuby validation succeeded!\033[0m\n"
    exit $RUBOCOP_EXIT 
fi

exit 0
